{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","validTab","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","selectedTab","setSelected","setSelectedId","value","ReactDOM","render","document","getElementById"],"mappings":"8LAeaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAWH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEpE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWE,IAAW,CACpB,YAAaJ,EAAIC,KAAOH,EAASG,KAEnC,UAAQ,MAJV,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WACP,OAAIN,EAAIC,KAAOH,EAASG,GACfJ,EAAcG,GAGhBA,GARX,SAWGA,EAAIO,SAbFP,EAAIC,WAoBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAASU,cC/CLb,G,kBAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,iBAG7BC,EAAgB,WAC3B,MAAmCC,mBAASf,EAAK,GAAGY,OAApD,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAuCF,mBAASf,EAAK,GAAGM,IAAxD,mBAAOL,EAAP,KAAsBiB,EAAtB,KAQA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBS,KAGtB,cAAC,EAAD,CACEhB,KAAMA,EACNC,cAAeA,EACfC,cAfc,SAACiB,GACnBF,EAAYE,EAAMP,OAElBM,EAAcC,EAAMb,WChBxBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a7d15965.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nexport interface Tab {\n  id: string,\n  title: string,\n  content: string\n}\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (value: Tab) => void\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const validTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames({\n                'is-active': tab.id === validTab.id,\n              })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== validTab.id) {\n                    return onTabSelected(tab);\n                  }\n\n                  return tab;\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {validTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs, Tab } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelected] = useState(tabs[0].title);\n  const [selectedTabId, setSelectedId] = useState(tabs[0].id);\n\n  const handleClick = (value: Tab) => {\n    setSelected(value.title);\n\n    setSelectedId(value.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleClick}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}